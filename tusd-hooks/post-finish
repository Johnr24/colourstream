#!/bin/sh
# Tusd post-finish hook script

# Exit immediately if a command exits with a non-zero status.
set -e

# --- Configuration ---
# Base directory where tusd stores files INSIDE THE CONTAINER
TUSD_DATA_DIR="/srv/tusd-data"

# --- Log Environment Variables (for debugging) ---
echo "--- Tusd Hook Environment Variables ---" >&2
env | grep TUS_ | sort >&2
echo "---------------------------------------" >&2

# --- Get Metadata ---
# Tusd provides metadata via environment variables prefixed with TUS_META_
# Keys are uppercased, and hyphens are replaced with underscores.
UPLOAD_ID="$TUS_ID"
CLIENT_CODE="$TUS_META_CLIENTCODE"
PROJECT_NAME="$TUS_META_PROJECT"
ORIGINAL_FILENAME="$TUS_META_FILENAME"

# --- Validate Metadata ---
if [ -z "$UPLOAD_ID" ]; then
  echo "Error: TUS_ID environment variable is missing." >&2
  exit 1 # Exit with error
fi
if [ -z "$CLIENT_CODE" ]; then
  echo "Error: TUS_META_CLIENTCODE environment variable is missing." >&2
  exit 0 # Exit successfully for Tusd, but log error
fi
if [ -z "$PROJECT_NAME" ]; then
  echo "Error: TUS_META_PROJECT environment variable is missing." >&2
  exit 0 # Exit successfully for Tusd, but log error
fi
if [ -z "$ORIGINAL_FILENAME" ]; then
  echo "Error: TUS_META_FILENAME environment variable is missing." >&2
  exit 0 # Exit successfully for Tusd, but log error
fi

echo "Processing upload ID: $UPLOAD_ID" >&2
echo "Client Code: $CLIENT_CODE" >&2
echo "Project Name: $PROJECT_NAME" >&2
echo "Original Filename: $ORIGINAL_FILENAME" >&2

# --- Sanitize Paths (Basic) ---
# Replace potentially problematic characters with underscores
# A more robust solution might be needed depending on expected inputs
SANITIZED_CLIENT_CODE=$(echo "$CLIENT_CODE" | sed 's/[^a-zA-Z0-9_-]/_/g')
SANITIZED_PROJECT_NAME=$(echo "$PROJECT_NAME" | sed 's/[^a-zA-Z0-9_-]/_/g')
# Prevent path traversal and replace slashes in filename
SANITIZED_FILENAME=$(echo "$ORIGINAL_FILENAME" | sed 's#/#_#g' | sed 's#\\#_#g' | sed 's/\.\.//g')

echo "Sanitized Client Code: $SANITIZED_CLIENT_CODE" >&2
echo "Sanitized Project Name: $SANITIZED_PROJECT_NAME" >&2
echo "Sanitized Filename: $SANITIZED_FILENAME" >&2

# --- Define Paths ---
SOURCE_FILE_PATH="$TUSD_DATA_DIR/$UPLOAD_ID"
SOURCE_INFO_PATH="$TUSD_DATA_DIR/$UPLOAD_ID.info"
DESTINATION_DIR="$TUSD_DATA_DIR/$SANITIZED_CLIENT_CODE/$SANITIZED_PROJECT_NAME"
DESTINATION_FILE_PATH="$DESTINATION_DIR/$SANITIZED_FILENAME"
DESTINATION_INFO_PATH="$DESTINATION_DIR/$SANITIZED_FILENAME.info"

echo "Source File: $SOURCE_FILE_PATH" >&2
echo "Source Info: $SOURCE_INFO_PATH" >&2
echo "Destination Dir: $DESTINATION_DIR" >&2
echo "Destination File: $DESTINATION_FILE_PATH" >&2
echo "Destination Info: $DESTINATION_INFO_PATH" >&2

# --- Create Destination Directory ---
echo "Creating destination directory: $DESTINATION_DIR" >&2
if ! mkdir -p "$DESTINATION_DIR"; then
  echo "Error: Failed to create destination directory '$DESTINATION_DIR'." >&2
  exit 1 # Exit with error
fi
echo "Destination directory created or already exists." >&2

# --- Move Files ---
# Check if source file exists
if [ ! -f "$SOURCE_FILE_PATH" ]; then
    echo "Error: Source file '$SOURCE_FILE_PATH' not found." >&2
    exit 1 # Exit with error
fi

echo "Moving data file..." >&2
if ! mv "$SOURCE_FILE_PATH" "$DESTINATION_FILE_PATH"; then
  echo "Error: Failed to move data file '$SOURCE_FILE_PATH' to '$DESTINATION_FILE_PATH'." >&2
  exit 1 # Exit with error
fi
echo "Data file moved successfully." >&2

# Check if source info file exists before moving (it should, but check anyway)
if [ -f "$SOURCE_INFO_PATH" ]; then
    echo "Moving info file..." >&2
    if ! mv "$SOURCE_INFO_PATH" "$DESTINATION_INFO_PATH"; then
      # Log warning but don't fail the hook if only info file move fails
      echo "Warning: Failed to move info file '$SOURCE_INFO_PATH' to '$DESTINATION_INFO_PATH'." >&2
    else
      echo "Info file moved successfully." >&2
    fi
else
    echo "Warning: Source info file '$SOURCE_INFO_PATH' not found. Skipping move." >&2
fi

echo "Hook script finished successfully for upload ID: $UPLOAD_ID" >&2

# Exit with 0 to indicate success to tusd
exit 0
