#!/bin/bash

# Add debug logging
echo "[Tus Hook - post-finish] Starting post-finish hook" >&2
echo "[Tus Hook - post-finish] BACKEND_HOOK_URL: $BACKEND_HOOK_URL" >&2
echo "[Tus Hook - post-finish] UPLOAD_ID: $UPLOAD_ID" >&2

# --- Send Data to Backend API (Run SYNCHRONOUSLY - wait for backend to move file) ---
echo "[Tus Hook - post-finish] Preparing JSON payload" >&2

JSON_PAYLOAD=$(cat <<EOF
{
    "uploadId": "$UPLOAD_ID",
    "fileName": "$UPLOAD_FILENAME",
    "fileSize": "$UPLOAD_SIZE",
    "fileType": "$UPLOAD_FILETYPE",
    "uploadMetadata": "$UPLOAD_METADATA"
}
EOF
)

echo "[Tus Hook - post-finish] JSON Payload: $JSON_PAYLOAD" >&2

# Send notification to backend
echo "[Tus Hook - post-finish] Sending notification to backend with wget (waiting for response): $BACKEND_HOOK_URL for Upload ID: $UPLOAD_ID" >&2

RESPONSE=$(wget -O - \
     --header="Content-Type: application/json" \
     --post-data="$JSON_PAYLOAD" \
     "$BACKEND_HOOK_URL" 2>&1)

WGET_EXIT_CODE=$?

echo "[Tus Hook - post-finish] wget exit code: $WGET_EXIT_CODE" >&2
echo "[Tus Hook - post-finish] Backend response: $RESPONSE" >&2

if [ $WGET_EXIT_CODE -eq 0 ]; then
    echo "[Tus Hook - post-finish] Notification sent successfully" >&2
    exit 0
else
    echo "[Tus Hook - post-finish] Failed to send notification to backend" >&2
    exit 1
fi